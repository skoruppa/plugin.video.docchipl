name: Build and Release Kodi Addon & Repo

on:
  push:
    tags:
      - '*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Test version number (e.g., 1.2.3-test)'
        required: true
        default: '0.0.1-manual-test'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Set version (from tag or manual input)
      run: |
        if [[ "${{ github.ref_type }}" == "tag" ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION="${{ github.event.inputs.version }}"
        fi
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        echo "Version set to: ${VERSION}"

    - name: Update addon.xml version
      run: |
        sed -i "/<addon/s/version=\"[^\"]*\"/version=\"${{ env.VERSION }}\"/" addon.xml

    - name: Update README.md version badge and zip example
      run: |
        sed -i "s|!\[Version\](https://img.shields.io/badge/version-[0-9\.]*-blue.svg)|![Version](https://img.shields.io/badge/version-${{ env.VERSION }}-blue.svg)|" README.md
        sed -i "s|plugin.video.docchipl-[0-9\.]*\.zip|plugin.video.docchipl-${{ env.VERSION }}.zip|" README.md

    - name: Commit updated files
      if: github.ref_type == 'tag'
      run: |
        git switch ${{ github.event.repository.default_branch }}
        git add README.md addon.xml
        if git diff --staged --quiet; then
          echo "No changes to commit."
        else
          git commit -m "chore: Update version to ${{ env.VERSION }} [skip ci]"
          git push
        fi

    - name: Create Addon ZIP
      id: addon_zip
      run: |
        ADDON_ID="plugin.video.docchipl"
        ADDON_ZIP_NAME="${ADDON_ID}-${{ env.VERSION }}.zip"
        zip -r "$ADDON_ZIP_NAME" . -x ".git/*" ".github/*" "repository.*.zip"
        echo "zip_name=$ADDON_ZIP_NAME" >> $GITHUB_OUTPUT

    - name: Create Test Release (on manual run)
      if: github.ref_type != 'tag'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        name: Test Release v${{ env.VERSION }}
        prerelease: true
        files: ${{ steps.addon_zip.outputs.zip_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Official Release (on tag push)
      if: github.ref_type == 'tag'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        files: ${{ steps.addon_zip.outputs.zip_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update gh-pages repository
      run: |
        git clone --depth 1 --branch gh-pages https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages
        cd gh-pages
        
        cp ../${{ steps.addon_zip.outputs.zip_name }} .

        REPO_ID="repository.docchipl"
        REPO_ZIP_NAME="${REPO_ID}-${{ env.VERSION }}.zip"
        mkdir -p $REPO_ID
        
        cat > ./${REPO_ID}/addon.xml <<- EOF
        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
        <addon id="repository.docchipl" name="Docchipl Repo" version="${{ env.VERSION }}" provider-name="skoruppa">
            <extension point="xbmc.addon.repository" name="Docchipl Repo">
                <info compressed="false">https://raw.githubusercontent.com/${{ github.repository }}/gh-pages/addons.xml</info>
                <checksum>https://raw.githubusercontent.com/${{ github.repository }}/gh-pages/addons.xml.md5</checksum>
                <datadir zip="true">https://raw.githubusercontent.com/${{ github.repository }}/gh-pages/</datadir>
            </extension>
            <extension point="xbmc.addon.metadata">
                <summary>Repozytorium dla wtyczki Docchipl</summary>
                <description>Repozytorium instalacyjne dla dodatk√≥w od skoruppa.</description>
                <platform>all</platform>
                <assets>
                    <icon>icon.png</icon>
                    <fanart>fanart.jpg</fanart>
                </assets>
            </extension>
        </addon>
        EOF
        
        cp ../resources/icon.png ./${REPO_ID}/icon.png || echo "Repo icon not found in resources/."
        cp ../resources/fanart.jpg ./${REPO_ID}/fanart.jpg || echo "Repo fanart not found in resources/."
        
        zip -r $REPO_ZIP_NAME $REPO_ID
        rm -rf $REPO_ID

        REPO_ADDON_XML=$(unzip -p $REPO_ZIP_NAME */addon.xml)

        cat > addons.xml <<- EOF
        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
        <addons>
          $(sed '/<?xml/d' ../addon.xml)

          $(echo "${REPO_ADDON_XML}" | sed '/<?xml/d')
        </addons>
        EOF

        md5sum addons.xml | awk '{print $1}' > addons.xml.md5

        cat > index.html <<- EOH
        <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
        <html>
        <head><title>Index of /</title></head>
        <body>
        <h1>Index of /</h1>
        <table>
        EOH
        for filename in $(ls -1); do
          if [[ "$filename" == *.zip || "$filename" == *.md5 || "$filename" == *.xml ]]; then
            echo "<tr><td><a href=\"$filename\">$filename</a></td></tr>" >> index.html
          fi
        done
        cat >> index.html <<- EOT
        </table>
        </body>
        </html>
        EOT

        git add .
        if git diff --staged --quiet; then
          echo "No changes in gh-pages to commit."
        else
          git commit -m "repo: Add/update addon version ${{ env.VERSION }} [skip ci]"
          git push
        fi
